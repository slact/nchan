0.99.4 (Feb 12 2016)
 fix: invalid memory access in channel DELETE response
 fix: race condition in IPC during channel creation (thanks vtslothy)
0.99.3 (Feb 10 2016)
 fix: SIGHUP reloading
 fix: startup with insufficient file descriptors shouldn't crash
 fix: longpoll-multipart failure to immediately respond
 fix: longpoll-multipart abort handling
 fix: redis-store cached message timeouts
 fix: redis connection-lost handling
 fix: startup with 'master_process off' (single-process mode)
 feature: EventSource 'event:' line support with custom header or config
0.98 (Jan 21 2016)
 feature: publish to multiple channels with one request
 feature: nchan_longpoll_multipart_response config setting
 fix: large message (in-file) handling for multipart/mixed and chunked subscribers
 fix: 400 Bad Request error on 32-bit systems
 fix: memory allocation error for >8 multi-channel subscribers
0.97 (Jan 5 2016) 
 fix: build issues with debian
 fix: compatibility with nginx versions down to 1.0.15
 fix: publishing bug introduced in 0.96
0.961 (Jan 4 2016)
 fix: compiler warning
0.96 (Jan 1. 2016)
 feature: websocket ping with nchan_websocket_ping_interval
 fix: unsafe memory access for redis publisher
 feature: nchan_publisher_upstream_request
 fix: http/2 compatibility for EventSource and multipart/mixed
 fix: nchan_authorize_request for publisher location endpoints
 fix: publishing long (file-backed) messages to redis-store
0.95 (Dec. 24 2015)
 feature: configurable nchan_access_control_origin_header, default to *
 fix: recognize non-preflighted CORS requests
 fix: redis invalid memory access after timeout
0.94 (Dec. 22 2015)
 feature: last mesage id in channel info response
 feature: subscribe up to 255 channel ids using nchan_channel_id_split_delimiter
 fix: tried connecting to redis when not needed
 change: "last requested" no longer has a -1 value for 'never requested'.
 fix: "last requested" in channel info sometimes not updated
 fix: deleting empty channels
 change: more compact message ids
0.931 (Dec. 14 2015)
 optimize: inter-process internal subscriber fetched too many messages
0.93 (Dec. 12 2015)
 feature: optionally only use Etag for subscriber message id
 feature: optionally get requested message id from variable config
0.92 (Dec. 11 2015)
 feature: HTTP multipart/mixed subscriber
 fix: EventSource bad memory access on disconnect
 feature: HTTP chunked encoding subscriber
 fix: resolved some strict compiler warnings
 fix: more stringent out-of-memory detection during response output. thanks @woodyhymns
 fix: less-than-optimal cache filename handling. thanks @ZhouBox
 fix: incorrect EventSource charset in header. thanks @eschultz
 fix: segfault when websocket publishes message and immediately disconnects
 fix: Duplicate "Connection: Upgrade" header for websocket handshake. thanks @eschultz 
0.904 (Dec. 7 2015)
 fix: more flexible Websocket handshake for "Connection" header. thanks @eschultz
 fix: out-of-memory safety check. thanks @woodyhymns
0.903 (Dec 3 2015)
 fix: better redis engine connection initializer
 change: simpler message buffer settings
 fix: more backwards-compatibility for pushmodule config settings
0.9 (Dec. 2 2015) - first beta pre-release tag after rebranding as Nchan
 feature: meta channel events: track when subscribers connect and disconnect, and when messages are
          published, with configurable event strings
 feature: request authorization: send upstream request before publishing or subscribing.
          works just like the auth_request module.
 feature: channel multiplexing. up to 4 channels can be subscribed to from a single location
 fix: channel ids were not set within if statements in the nginx config
 feature: hybrid memstore + redis storage. local caching + distributed message publishing, the best
          of both worlds. (still slower than pure memstore though)
 feature: pubsub locations, optional separate publisher and subscriber channel ids per location
 feature: websocket publisher support
 name change: we're nchan now. code renamed, and cleaned up. config options are backwards-compatible.
 feature: websocket subscriber support
 huge refactor: completely new in-memory storage engine. No more global lock.
    Actually, no more locks at all!
 feature: redis-backed storage engine. 
0.73 (Sep. 2 2014)
 fix: turning on gzip cleared Etag subscriber response header
 fix: channels incorrectly deleted when overwhelmed with connections
 feature: CORS support via OPTIONS request method response
 fix: file descriptor leak when restarting nginx via SIGHUP
 improve: concurrency for interprocess notifications
 refactor: completely encapsulated message store
 fix: slow memory leak introduced in 0.7
 fix: memory leak when not using message buffer
0.712 (Mar. 21 2014)
 fix: intermittently dropped long-polling connections on internal redirects
 fix: unable to proxy long-polling subscribers. (thanks wandenberg and sanmai)
0.711 (Mar. 13 2014)
 fix: incompatibility with cache manager (proxy_cache and fastcgi_cache directives)
0.71 (Mar. 1 2014)
 fix: removed unused variables and functions to quiet down GCC
0.7: (Feb. 20 2014)
 fix: last-in concurrency setting wasn't working reliably
 refactor: partially separated message storage. add a test harness.
 fix: segfault from concurrency bug while garbage-collecting channels
 fix: some large messages got lost
0.692 (Feb. 3 2010)
 fix: error log reported failed close() for some publisher requests with large messages
 fix: occasional memory leak during message deletion
 fix: worker messages intended for dead worker processes were not deleted
0.691 (Feb. 2 2010)
 fix: server reload (via SIGHUP signal) was failing
 fix: segfault on messages longer than client_body_buffer_size (thanks wfelipe)
 change: removed push_min_message_recipients, added push_delete_oldest_received_message
0.69 (Nov. 17 2009)
 fix: publisher got a 201 Created response even if the channel had no subscribers at the time (should be 202 Accepted)
 fix: small memory leak after each message broadcast to a channel
 feature: optional push_max_channel_subscribers setting added
 fix: first-in concurrency setting wasn't responding to subscribers with a correct status code on conflict
 fix: reused subscriber connections sometimes failed to receive messages
 unfeature: no more nginx 0.6 support. not worth the hassle.
0.683 (Nov. 10 2009)
 change: default max. reserved memory size changed form 16MB to 32 MB
 change: unused node garbage collection made a little more aggressive (max. 3 unused channels per channel search instead of 1)
 fix: unused nodes were deleted only on channel id hash collision (very rare)
 fix: segmentation fault from allocating insufficient memory for interprocess messaging
0.681 (Nov. 6 2009)
 feature: added push_message_buffer_length setting, which sets push_message_max_buffer_length and push_message_min_buffer_length at once.
 fix: publisher channel info text/json response now uses double quotes instead of single.
 fix: interprocess messages were not removed from shared memory correctly, causing weird errors
0.68 (Nov. 5 2009)
 change: default push_subscriber_concurrency value is now "broadcast"
 fix: incorrect error messages for invalid push_pubscriber and push_subscriber_concurrency settings
 change: removed deprecated push_buffer_size and push_queue_messages settings
 feature: rudimentary content-type negotiation for publisher channel info response.
   support text/plain, text/json, text/yaml and application/xml (and mimetype equivalents)
 fix: publisher GET response has HTTP status 0
0.67beta (Nov. 4 2009) and older
 see git repository
